name: Docker Build and Wiz CLI Scan

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      TAG: "lq-docker-tag"
      POLICY: "LQUAYLE vulnerabilities policy"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t $TAG -f tasky-main/Dockerfile tasky-main

      - name: Install WizCLI
        run: |
          curl -Lo wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64
          chmod +x wizcli
          sudo mv wizcli /usr/local/bin/wizcli

      - name: Authenticate Wiz CLI
        env:
          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}
        run: |
          echo "Authenticating with Wiz..."
          wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"

      - name: Scan Docker image with Wiz CLI
        run: |
          wizcli docker scan --image $TAG --policy "$POLICY" --output wiz-scan-results.json,json,false --no-publish

      - name: Write Wiz Summary and OS Package Table
        run: |
          echo "## Wiz Vulnerability Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Severity | Count | Fixable | Public Exploit | CISA KEV |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|---------|----------------|-----------|" >> $GITHUB_STEP_SUMMARY
      
          jq -r '
            [.result.osPackages[]? | select(.vulnerabilities != null) | .vulnerabilities[]]
            | map({
                severity: .severity,
                fixable: (.fixedVersion != null),
                publicExploit: (.hasExploit == true),
                cisaKev: (.hasCisaKevExploit == true)
              })
            | group_by(.severity)
            | map({
                severity: .[0].severity,
                count: length,
                fixable: map(select(.fixable)) | length,
                publicExploit: map(select(.publicExploit)) | length,
                cisaKev: map(select(.cisaKev)) | length
              })
            | sort_by(.severity)
            | .[]
            | "| \(.severity) | \(.count) | \(.fixable) | \(.publicExploit) | \(.cisaKev) |"
          ' wiz-scan-results.json >> $GITHUB_STEP_SUMMARY
      
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Vulnerable OS Packages" >> $GITHUB_STEP_SUMMARY
          echo "| Package | Current Version | Severity | CVE | Fix Version | Fixable | Public Exploit | CISA KEV |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|------------------|----------|-----|-------------|---------|----------------|-----------|" >> $GITHUB_STEP_SUMMARY
      
          jq -r '
            (.result.osPackages // [])
            | map(select(.vulnerabilities != null))
            | map(
                . as $pkg
                | $pkg.vulnerabilities[]
                | {
                    name: $pkg.name,
                    version: $pkg.version,
                    severity: .severity,
                    cve: .name,
                    fixVersion: (.fixedVersion // "-"),
                    fixable: (.fixedVersion != null),
                    publicExploit: (.hasExploit == true),
                    cisaKev: (.hasCisaKevExploit == true)
                  }
              )
            | flatten
            | sort_by(.severity)
            | .[]
            | "| \(.name) | \(.version) | \(.severity) | \(.cve) | \(.fixVersion) | \((.fixable | if . then \"Yes\" else \"No\" end)) | \((.publicExploit | if . then \"Yes\" else \"No\" end)) | \((.cisaKev | if . then \"Yes\" else \"No\" end)) |"
          ' wiz-scan-results.json >> $GITHUB_STEP_SUMMARY
