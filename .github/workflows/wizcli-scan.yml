name: Docker Build and Wiz CLI Scan

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      TAG: "lq-docker-tag"
      POLICY: "LQUAYLE vulnerabilities policy"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t $TAG -f tasky-main/Dockerfile tasky-main

      - name: Install WizCLI
        run: |
          curl -Lo wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64
          chmod +x wizcli
          sudo mv wizcli /usr/local/bin/wizcli

      - name: Authenticate Wiz CLI
        env:
          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}
        run: |
          echo "Authenticating with Wiz..."
          wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"

      - name: Scan Docker image with Wiz CLI
        run: |
          wizcli docker scan --image $TAG --policy "$POLICY" --output wiz-scan-results.json,json,false --no-publish

      - name: Upload Wiz Scan JSON result
        uses: actions/upload-artifact@v4
        with:
          name: wiz-scan-results
          path: wiz-scan-results.json

      - name: Write Full Wiz Vulnerability Digest to Summary
        run: |

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Vulnerability Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Severity | Total | Fixable | Public Exploit | CISA KEV |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|---------|----------------|-----------|" >> $GITHUB_STEP_SUMMARY
      
          jq -r '
            map({
              severity: .severity,
              fixable: (.fixedVersion != null),
              publicExploit: (.hasExploit // false),
              cisaKev: (.hasCisaKevExploit // false)
            })
            | group_by(.severity)
            | map({
                severity: .[0].severity,
                total: length,
                fixable: map(select(.fixable)) | length,
                publicExploit: map(select(.publicExploit)) | length,
                cisaKev: map(select(.cisaKev)) | length
              })
            | sort_by(.severity)
            | .[]
            | "| \(.severity) | \(.total) | \(.fixable) | \(.publicExploit) | \(.cisaKev) |"
          ' wiz-scan-results.json >> $GITHUB_STEP_SUMMARY
      
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "<details><summary Vulnerable Packages (click to expand)</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| CVE | Severity | Fixable | Public Exploit | CISA KEV | Fixed Version |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|----------|---------|----------------|-----------|----------------|" >> $GITHUB_STEP_SUMMARY
      
          jq -r '
            map({
              cve: .name,
              severity: .severity,
              fixable: (.fixedVersion != null),
              fixedVersion: (.fixedVersion // "-"),
              publicExploit: (.hasExploit // false),
              cisaKev: (.hasCisaKevExploit // false),
              rank: (
                if .severity == "CRITICAL" then 0
                elif .severity == "HIGH" then 1
                elif .severity == "MEDIUM" then 2
                elif .severity == "LOW" then 3
                else 4 end
              )
            })
            | sort_by(.rank)
            | .[]
            | "| \(.cve) | \(.severity) | \((.fixable | if . then "Yes" else "No" end)) | \((.publicExploit | if . then "Yes" else "No" end)) | \((.cisaKev | if . then "Yes" else "No" end)) | \(.fixedVersion) |"
          ' wiz-scan-results.json >> $GITHUB_STEP_SUMMARY
      
          echo "</details>" >> $GITHUB_STEP_SUMMARY
