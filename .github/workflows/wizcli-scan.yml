name: Docker Build and Wiz CLI Scan

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      TAG: "lq-docker-tag"
      POLICY: "LQUAYLE vulnerabilities policy"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t $TAG -f tasky-main/Dockerfile tasky-main

      - name: Install WizCLI
        run: |
          curl -Lo wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64
          chmod +x wizcli
          sudo mv wizcli /usr/local/bin/wizcli

      - name: Authenticate Wiz CLI
        env:
          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}
        run: |
          echo "Authenticating with Wiz..."
          wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"

      - name: Scan Docker image with Wiz CLI
        run: |
          wizcli docker scan --image $TAG --policy "$POLICY" --output wiz-scan-results.sarif,sarif,false

      - name: Output SARIF OS Package Vulnerabilities to Summary
        shell: bash
        run: |
          echo "## ðŸ§¬ Vulnerable OS Packages (from SARIF)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Package | Version | Critical | High | Medium | Low |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|---------|----------|------|--------|-----|" >> $GITHUB_STEP_SUMMARY

          jq -r "$(cat <<'EOF'
            def rules_by_id:
              (.runs[0].tool.driver.rules // [])
              | map({(.id): {severity: (.properties.severity // "Unknown")}})
              | add;

            def parse_package_info(msg):
              msg
              | capture("OS_PACKAGE: (?<name>[^ ]+) (?<version>[^ ]+)")
              ;

            def group_by_package:
              group_by({name: .name, version: .version})
              | map({
                  name: .[0].name,
                  version: .[0].version,
                  crit: (map(select(.severity == "Critical")) | length),
                  high: (map(select(.severity == "High")) | length),
                  med: (map(select(.severity == "Medium")) | length),
                  low: (map(select(.severity == "Low")) | length)
                });

            (rules_by_id) as $rules
            | [.runs[0].results[]
              | select(.message.text | test("OS_PACKAGE: .*"))
              | {
                  ruleId: .ruleId,
                  severity: ($rules[.ruleId].severity // "Unknown"),
                  (parse_package_info(.message.text))
                }]
            | group_by_package
            | .[]
            | "| \(.name) | \(.version) | \(.crit) | \(.high) | \(.med) | \(.low) |"
EOF
          )" wiz-scan-results.sarif >> $GITHUB_STEP_SUMMARY
